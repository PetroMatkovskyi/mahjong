{"version":3,"sources":["ui/mahjong/store/types.ts","ui/mahjong/store/action.ts","ui/mahjong/store/reducer.ts","ui/mahjong/components/Card/Card.tsx","ui/mahjong/pages/MahjongPage/MahjongPage.tsx","ui/mahjong/@core/Mahjong.tsx","App.tsx","store/reducers/rootReducer.ts","store/index.ts","index.tsx"],"names":["GET_RANDOM_OF_PRIMES","SELECTED_FIRST_PRIME","SELECTED_SECOND_PRIME","SET_MATCH","HIDE_WRONG_SELECT","getRandomPlace","num","Math","floor","random","randomPrimes","prime","sieve","primes","i","push","j","getPrimes","randomDoublePrime","Array","length","firstRandomPlace","secondRandomPlace","count","startPosition","map","item","id","matched","selected","getRandomPrimes","type","types","payload","initialState","randomPrime","Card","dispatch","useDispatch","className","cn","card","card_selected","card_matched","onClick","selectSecondPrime","a","setTimeout","selectFirstPrime","MahjongPage","useEffect","store","useSelector","mahjong","Mahjong","App","rootReducer","combineReducers","state","action","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6faf9630.chunk.js","sourcesContent":["export const GET_RANDOM_OF_PRIMES: string = 'GET_RANDOM_OF_PRIMES';\r\nexport const SELECTED_FIRST_PRIME: string = 'SELECTED_FIRST_PRIME';\r\nexport const SELECTED_SECOND_PRIME: string = 'SELECTED_SECOND_PRIME';\r\nexport const SET_MATCH: string = 'SET_MATCH';\r\nexport const HIDE_WRONG_SELECT: string = 'HIDE_WRONG_SELECT';\r\n","import * as types from './types';\r\nimport { PrimeItemObj } from '../models/PrimeItemObj';\r\n\r\nfunction getPrimes(num: number = 50): number[] {\r\n  const sieve: boolean[] = [];\r\n  const primes: number[] = [];\r\n\r\n  for (let i = 2; i <= num; i++) {\r\n    if (!sieve[i]) {\r\n      primes.push(i);\r\n      for (let j = i * 2; j <= num; j += i) {\r\n        sieve[j] = true;\r\n      }\r\n    }\r\n  }\r\n  return primes;\r\n}\r\n\r\nfunction getRandomPlace(num: number) {\r\n  return Math.floor(Math.random() * num * 2);\r\n}\r\n\r\nfunction randomPrimes(): PrimeItemObj[] {\r\n  const prime: number[] = getPrimes();\r\n  const randomDoublePrime: number[] = new Array(prime.length * 2);\r\n\r\n  for (let i = 0; i <= prime.length; i++) {\r\n    let firstRandomPlace = getRandomPlace(prime.length);\r\n    let secondRandomPlace = getRandomPlace(prime.length);\r\n\r\n    if (!randomDoublePrime[firstRandomPlace]) {\r\n      randomDoublePrime[firstRandomPlace] = prime[i];\r\n    } else {\r\n      for (\r\n        let count = 0, startPosition = firstRandomPlace + 1;\r\n        count <= randomDoublePrime.length;\r\n        count++, startPosition++\r\n      ) {\r\n        if (startPosition >= randomDoublePrime.length) startPosition = 0;\r\n\r\n        if (!randomDoublePrime[startPosition]) {\r\n          randomDoublePrime[startPosition] = prime[i];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    for (\r\n      let count = 0, startPosition = secondRandomPlace + 1;\r\n      count <= randomDoublePrime.length;\r\n      count++, startPosition++\r\n    ) {\r\n      if (startPosition >= randomDoublePrime.length) startPosition = 0;\r\n\r\n      if (!randomDoublePrime[startPosition]) {\r\n        randomDoublePrime[startPosition] = prime[i];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return randomDoublePrime.map(\r\n    (item, i): PrimeItemObj => ({\r\n      id: i,\r\n      num: item,\r\n      matched: false,\r\n      selected: false,\r\n    })\r\n  );\r\n}\r\n\r\nexport const getRandomPrimes = () => ({\r\n  type: types.GET_RANDOM_OF_PRIMES,\r\n  payload: randomPrimes(),\r\n});\r\n\r\nexport const selectFirstPrime = (prime: PrimeItemObj) => ({\r\n  type: types.SELECTED_FIRST_PRIME,\r\n  payload: prime,\r\n});\r\n\r\nexport const selectSecondPrime = (prime: PrimeItemObj) => ({\r\n  type: types.SELECTED_SECOND_PRIME,\r\n  payload: prime,\r\n});\r\n\r\nexport const setMatch = () => {\r\n  return { type: types.SET_MATCH };\r\n};\r\n\r\nexport const hideWrongSelect = () => {\r\n  return async (dispatch: any) =>\r\n    setTimeout(() => {\r\n      dispatch({ type: types.HIDE_WRONG_SELECT });\r\n    }, 800);\r\n};\r\n","import {\r\n  GET_RANDOM_OF_PRIMES,\r\n  HIDE_WRONG_SELECT,\r\n  SELECTED_FIRST_PRIME,\r\n  SELECTED_SECOND_PRIME,\r\n  SET_MATCH,\r\n} from './types';\r\nimport { MahjongStore } from '../models/MahjongStore';\r\nimport { PrimeItemObj } from '../models/PrimeItemObj';\r\n\r\ntype Action = {\r\n  type: string;\r\n  payload: any | PrimeItemObj;\r\n};\r\n\r\nconst initialState: MahjongStore = { randomPrime: [], selected: [] };\r\n\r\nexport const mahjongReducer = (state = initialState, action: Action): MahjongStore => {\r\n  switch (action.type) {\r\n    case GET_RANDOM_OF_PRIMES:\r\n      return { ...state, randomPrime: [...action.payload] };\r\n\r\n    case SELECTED_FIRST_PRIME:\r\n      return {\r\n        ...state,\r\n        randomPrime: state.randomPrime.map((i) => {\r\n          if (i.id === action.payload.id) return { ...i, selected: true };\r\n          return i;\r\n        }),\r\n        selected: [...state.selected, action.payload],\r\n      };\r\n\r\n    case SELECTED_SECOND_PRIME:\r\n      return {\r\n        ...state,\r\n        randomPrime: state.randomPrime.map((i) => {\r\n          if (i.id === action.payload.id) return { ...i, selected: true };\r\n          return i;\r\n        }),\r\n        selected: [...state.selected, action.payload],\r\n      };\r\n\r\n    case SET_MATCH:\r\n      return {\r\n        ...state,\r\n        randomPrime: state.randomPrime.map((i) => {\r\n          if (i.selected) return { ...i, selected: false, matched: true };\r\n          return i;\r\n        }),\r\n        selected: [],\r\n      };\r\n\r\n    case HIDE_WRONG_SELECT:\r\n      return {\r\n        ...state,\r\n        randomPrime: state.randomPrime.map((i) => {\r\n          if (i.selected) return { ...i, selected: false };\r\n          return i;\r\n        }),\r\n        selected: [],\r\n      };\r\n  }\r\n  return state;\r\n};\r\n","import React from 'react';\r\nimport cn from 'classnames';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n  hideWrongSelect,\r\n  selectFirstPrime,\r\n  selectSecondPrime,\r\n  setMatch,\r\n} from 'ui/mahjong/store';\r\nimport { PrimeItemObj } from 'ui/mahjong/models/PrimeItemObj';\r\n\r\nimport './Card.scss';\r\n\r\ntype Props = {\r\n  prime: PrimeItemObj;\r\n  selected: PrimeItemObj[];\r\n};\r\n\r\nexport const Card: React.FC<Props> = ({ prime, selected }): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onSelectCard = () => {\r\n    if (!prime.selected && !prime.matched) {\r\n      if (!selected.length) {\r\n        dispatch(selectFirstPrime(prime));\r\n      } else if (selected.length < 2) {\r\n        dispatch(selectSecondPrime(prime));\r\n\r\n        if (selected[0].num === prime.num) {\r\n          dispatch(setMatch());\r\n        } else {\r\n          dispatch(hideWrongSelect());\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cn({\r\n        card: true,\r\n        card_selected: prime.selected,\r\n        card_matched: prime.matched,\r\n      })}\r\n      onClick={onSelectCard}\r\n    >\r\n      <h2 className=\"card__title\">{prime.num}</h2>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Card } from '../../components/Card';\r\nimport { getRandomPrimes } from '../../store';\r\nimport { MahjongStore } from '../../models/MahjongStore';\r\n\r\nimport './MahjongPage.scss';\r\n\r\nexport const MahjongPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getRandomPrimes());\r\n  }, []);\r\n\r\n  const onclick = () => {\r\n    dispatch(getRandomPrimes());\r\n  };\r\n\r\n  const store = useSelector((store: { mahjong: MahjongStore }) => store.mahjong);\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h1>Mahjong game</h1>\r\n      <div className=\"cards\">\r\n        {store.randomPrime.map((item, i) => (\r\n          <Card key={i} prime={item} selected={store.selected} />\r\n        ))}\r\n      </div>\r\n      <button onClick={onclick} className=\"button\">\r\n        reload\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { MahjongPage } from '../pages/MahjongPage';\r\n\r\nexport const Mahjong: React.FC = () => <MahjongPage />;\r\n","import { Mahjong } from './ui/mahjong';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Mahjong />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { mahjongReducer } from '../../ui/mahjong/store';\r\n\r\nexport const rootReducer = combineReducers({\r\n  mahjong: mahjongReducer,\r\n});\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from './reducers/rootReducer';\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport { store } from './store';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}